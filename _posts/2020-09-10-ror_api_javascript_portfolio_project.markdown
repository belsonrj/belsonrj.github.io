---
layout: post
title:      "ROR API/Javascript Portfolio Project"
date:       2020-09-10 19:41:19 -0400
permalink:  ror_api_javascript_portfolio_project
---


<p>This was the most challenging project so far, which stands to reason being this late in the course. As I was planning my project, I had some pretty big ideas that needed to be downsized when I realized that perhaps I had been a bit too optimistic with my skill and time frame. I had to remind myself that this project was meant to help us showcase our understanding of the framework and the funtionailty of a frontend/backend application. I had some great ideas about my ideal version of this application, but I realized that it was much more important for me to spend more time understanding the basics rather than piling on all the extra features.</p>
<p>Like any project I've done thus far, theres always at least one issue that can completely stall my progress for days. There were a couple that stumped me in the very beginning involving CORS and PostgreSQL. I hadn't had any experience with them, and they proved to be quite a hurdle when I was trying to start the project. However, by far the biggest issue I faced had to do with a miscommunication between my frontend and backend. During the last project I became very comfortable with Ruby on Rails and Active Record. Playing with it and through trial and error I felt myself start to really understand how they worked, and I felt much more comfortable manipulating models, objects, and relationships. It started to feel more like a tool and less like a confusing burden.</p>
<p>During this project I had a simple One to Many relationship, yet I couldn't get the Active Record methods to behave in my Javascript code. I was simply calling a '.length' method on my model, yet I kept getting an 'undefined' error. I went through my Rails console and could clearly see that my relationship was correct. My model absolutely had a length method and an array of ownership. I poured over my code for hours and hours. I read through pages upon pages of similar issues and trouble shooting suggestions. I changed my code this way and that on the frontend and backend dozens of times to no resolve. I thought I was losing my mind. I visited my HTML routes to see my array displayed, almost tauntingly. My debugger codes were showing my JSON returning nothing where I knew there was something, but how do I access this precious information?</p>

<p>Well, as I've been learning throughout this course, the solution just seems to click at some point and it seems that more often than not, it's something so much less complex than it seemed. My relationship was not rendering from the backend for Javascript to read. I had to explicitly offer that information from my controller. It was as simple as an extra line of code in the controller. Meanwhile, I had been writing multiple lines on multiple files trying to force this solution.</p>
<p> As alienating and terrible as that feels, it's also the greatest way to learn. Personally, trial/error and troubleshooting are how concepts are solidified in my memory. It's how my brain starts to recognize patterns. The modules in the course are useful for introducing concepts and nomenclature, but the projects force these concepts into my memory. I always walk away from these projects with a much deeper understanding of the material.</p>

